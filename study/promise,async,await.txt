# Promise, Async/await
    자바스크립트에서 비동기 처리를 가능케 함
    ㄴ 비동기 처리 :  특정 코드의 연산이 끝날 때까지 코드의 실행을 멈추지 않고 다음 코드를 먼저 실행하는 자바스크립트의 특성을 의미합니다. 동시에 여러가지 작업을 처리할 수 있고 기다리는 과정에서 다른 함수를 호출할수도 있습니다. (출처 : https://kkhcode.tistory.com/6)
        왜 필요한가?  화면에서 서버로 데이터를 요청했을때 서버가 언제 그 요청에대한 응답을 줄지 모르는데 마냥 기다릴순 없기 때문이다.
        (출처 : https://velog.io/@zayong/%EB%B9%84%EB%8F%99%EA%B8%B0%EC%B2%98%EB%A6%AC)

    ## Promise : 내용은 실행 되었지만 결과를 아직 반환하지 않은 객체
        - 3가지 상태 
            Pending (대기)
            Fulfilled (이행)
            Rejected (실패)
        then() 과 catch() 문의 체이닝을 통해 비동기 로직의 성공 여부에 따른 분기 처리가 가능

    ## Async/await
        callback, promise의 단점을 해소하기 위해 만들어짐
        await는 async 함수 안에서만 동작함!
        에러를 핸들링할 수 있는 기능이 없기 때문에 try-catch문을 사용해야함

    출처 : https://velog.io/@pilyeooong/Promise%EC%99%80-asyncawait-%EC%B0%A8%EC%9D%B4%EC%A0%90